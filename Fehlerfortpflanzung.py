import numpy as np

def T(R): #cal_VIII function
    if R > 90876:
        return np.nan
    if R < 3966:
        return np.nan
    x = 11.2 - np.log(R - 1400)
    t = np.exp( - 3.2399844232487
                + 0.90937501196579 * x
                - 0.236194937213842 * x ** 2
                + 0.334479761913975 * x ** 3
                + 1.92984511141176 * x ** 4
                - 8.36436542974131 * x ** 5
                + 15.5116471131059 * x ** 6
                - 17.0802373867062 * x ** 7
                + 12.2903863735048 * x ** 8
                - 5.99288660987976 * x ** 9
                + 1.99162340395573 * x ** 10
                - 0.442371737178011 * x ** 11
                + 0.062344296759464 * x ** 12
                - 0.00497812072192625 * x ** 13
                + 1.67903902250485E-4 * x ** 14 )
    if t < 0:
        return np.nan
    return t

def dT(R, dR):
    x = 11.2 - np.log(R - 1400)
    dTdR = - T(R) * np.exp( 0.90937501196579
                - 2 * 0.236194937213842 * x
                + 3 * 0.334479761913975 * x ** 2
                + 4 * 1.92984511141176 * x ** 3
                - 5 * 8.36436542974131 * x ** 4
                + 6 * 15.5116471131059 * x ** 5
                - 7 * 17.0802373867062 * x ** 6
                + 8 * 12.2903863735048 * x ** 7
                - 9 * 5.99288660987976 * x ** 8
                + 10 * 1.99162340395573 * x ** 9
                - 11 * 0.442371737178011 * x ** 10
                + 12 * 0.062344296759464 * x ** 11
                - 13 * 0.00497812072192625 * x ** 12
                + 14 * 1.67903902250485E-4 * x ** 13 ) / ( R - 1400)
    return dTdR * dR
